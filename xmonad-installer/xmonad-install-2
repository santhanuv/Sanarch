#!/bin/bash

set -e

echo "Updating System..."

sudo pacman --noconfirm -Syu
sudo pacman --noconfirm --needed -S git base-devel xorg-xinit xorg-server xorg-xsetroot

echo -e '1. nvidia\t2. xf86-video-amdgpu\t3. xf86-video-intel\t4. Skip'
read -r -p "Choose the driver(Default 1): " inp

case $inp in
	[1])
		vd='nvidia nvidia-utils'
		;;
	[2])
		vd='xf86-video-amdgpu'
		;;
	[3])
		vd='xf86-video-intel'
		;;
	[4])
		vd=""
		;;
	[*])
		vd='nvidia nvidia-utils'
		;;
esac

echo -e '1. Xmonad\t2. Skip'
read -r -p "Choose the window manager(Default 1): " wm_inp

case $wm_inp in
    [1])
        wm='xmonad xmonad-contrib'
        ;;
    [2])
        wm=""
        ;;
    [*])
        wm='xmonad'
        ;;
esac

if ! [ -z "$vd" ]
then
	sudo pacman --needed -S $vd
fi

if ! [ -z "$wm" ]
then
    sudo pacman --needed -S $wm
fi

if pacman -Q | grep -i paru &> /dev/null
then
    helper="paru"
elif pacman -Q | grep -i yay &> /dev/null
then
    helper="yay"
else
    mkdir -p setWM/paru-aur
    git clone https://aur.archlinux.org/paru.git ./setWM/paru-aur
    cd ./setWM/paru-aur
    makepkg -si
    cd ../
    helper="paru"
fi

$helper --needed --noconfirm -S ttf-iosevka\
                 ttf-iosevka-term\
                 ttf-material-design-icons\
                 nerd-fonts-mononoki\
                 ttf-font-awesome\
                 nodejs-material-design-icons\
                 alacritty\
                 xorg-xsetroot\
                 polybar-git\
		             feh\
                 dmenu

mkdir bak
clone_dir="$HOME/.dotfiles"
git clone https://github.com/santhanuv17/.dotfiles.git $clone_dir || { echo "Unable to clone"; exit;  }

stow_config() {
    if [ -d $2 ]
    then
        dir_name=$(echo "$2" | rev | cut -d "/" -f 1 | rev)
        if [ ! -z dir_name ]
        then
            dir_name=$2
        fi
        mkdir -p "./bak"
        mv "$2" "bak/$dir_name-bak"
    fi
    mkdir -p $2
    if [ -z $1 ]
    then
        stow -d "$clone_dir/$1" -t $2 $3
    else
        stow -d "$clone_dir" -t $2 $3
    fi
}

# Backup and stow all the config
stow_config  "" "/usr/local/share/fonts" "fonts"
stow_config  "" "$HOME/.config/wallpapers" "wallpapers"
stow_config "terminals" "$HOME/.config/alacritty" "alacritty"
stow_config "bars/xmonad" "$HOME/.config/polybar" "polybar"
stow_config "wm" "$HOME/.config/xmonad" "xmonad"

if ! [ -f $HOME/.xinitrc ]
then
	touch $HOME/.xinitrc
fi

xdg_export_string="\
export XDG_CONFIG_HOME=\$HOME/.config\n\
export XDG_CACHE_HOME=\$HOME/.cache\n\
export XDG_DATA_HOME=\$HOME/.local/share\n\
export XDG_STATE_HOME=\$HOME/.local/state\
"
echo "# XDG BASE Directories" | sudo tee -a /etc/profile > /dev/null
echo -e $xdg_export_string | sudo tee -a /etc/profile > /dev/null

setCursorCmd="xsetroot -cursor_name left_ptr &"
if ! grep -Fxq "$setCursorCmd" "$HOME/.xinitrc"
then
	echo $setCursorCmd >> $HOME/.xinitrc
fi

execCmd="exec xmonad"
if ! grep -Fxq "$execCmd" "$HOME/.xinitrc"
then
	echo $execCmd >> $HOME/.xinitrc
fi

rm -rf ./tmp-clone
echo "All the existing configuarations files are moved to $PWD/bak"
echo "Run xmonad using startx command"
